{"version":3,"sources":["Components/Usuarios.jsx","index.js"],"names":["User","useState","usuarios","setUsuarios","useEffect","axios","get","then","res","pessoa","data","cards","card_number","cvv","expiry_date","pagamentoOpen","setPagamentoOpen","listTransp","setListTransp","payName","setPayName","abrirResultado","setAbrirResultado","valorDinheiro","setValorDinheiro","campoNecessario","setCampoNecessario","valorCartao","setValorCartao","naoConcluido","setNaoConcluido","map","item","className","style","display","src","img","alt","name","id","username","onClick","thousandSeparator","value","onChange","e","target","prefix","inputmode","placeholder","event","substr","rootComponet","document","getElementById","ReactDOM","render"],"mappings":"wNAMe,SAASA,IAGpB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACNC,IAAMC,IAAN,oDACCC,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAIE,KACnBP,EAAYM,QAElB,IAGF,IAAIE,EAAQ,CAER,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAKnB,EAA0Cb,mBAAS,QAAnD,mBAAOc,EAAP,KAAsBC,EAAtB,KACA,EAAoCf,mBAAS,QAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA4CnB,mBAAS,QAArD,mBAAOoB,EAAP,KAAuBC,EAAvB,KACA,EAA0CrB,mBAAS,IAAnD,mBAAOsB,EAAP,KAAsBC,EAAtB,KACA,EAA8CvB,mBAAS,QAAvD,mBAAOwB,EAAP,KAAwBC,EAAxB,KACA,EAAsCzB,mBAAS,KAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAAwC3B,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KAmDA,OACI,qCAEK5B,EAAS6B,KAAI,SAACC,GAAD,OACV,sBAAKC,UAAU,WAAWC,MAAO,CAACC,QAAQlB,GAA1C,UACI,qBAAKgB,UAAU,cAAf,SACI,qBAAKG,IAAKJ,EAAKK,IAAKC,IAAI,qBAE5B,sBAAKL,UAAU,qBAAf,UACI,yCACWD,EAAKO,QAEhB,uCACSP,EAAKQ,GADd,gBAC+BR,EAAKS,eAGxC,qBAAKR,UAAU,aAAf,SACI,wBAAQS,QAAS,WA1DrC,IAAuBH,IA0DkCP,EAAKO,KAzD1DvB,EAAiB,QACjBE,EAAc,QACdE,EAAWmB,IAuDK,2BAKZ,sBAAKN,UAAU,cAAcC,MAAO,CAACC,QAAQpB,GAA7C,UACI,sBAAKkB,UAAU,cAAf,UACI,mDAAqB,4BAAId,OACzB,sBAAMc,UAAU,UAAUS,QA9B1C,WACI1B,EAAiB,QACjBE,EAAc,SA4BF,kBAEJ,sBAAKe,UAAU,aAAf,UACI,cAAC,IAAD,CAAcU,mBAAmB,EAAMC,MAAOrB,EAAesB,SA9D7E,SAAqBC,GACjBtB,EAAiBsB,EAAEC,OAAOH,OAC1BlB,EAAmB,SA4D6EsB,OAAQ,MAAOC,UAAU,UAAUC,YAAY,YACnI,mBAAGhB,MAAO,CAACC,QAASV,GAApB,qCAEJ,yBAAQmB,MAAOjB,EAAakB,SA9EvC,SAAsBM,GACnBvB,EAAeuB,EAAMJ,OAAOH,QA6EpB,UACI,yBAAQA,MAAM,IAAd,iCAAoCjC,EAAM,GAAGC,YAAYwC,QAAQ,MACjE,yBAAQR,MAAM,IAAd,iCAAoCjC,EAAM,GAAGC,YAAYwC,QAAQ,SAErE,wBAAQV,QAAS,WA9DH,KAAlBnB,EACAG,EAAmB,SAGfI,EADkB,MAAlBP,EACgB,GAEA,UAEpBP,EAAiB,QACjBM,EAAkB,QAClBE,EAAiB,IACjBE,EAAmB,UAmDf,sBAIJ,sBAAKO,UAAU,cAAcC,MAAO,CAACC,QAASd,GAA9C,UACI,uDACA,6CAAe,iCAASQ,IAAxB,mCACA,wBAAQa,QAAS,WApDzBpB,EAAkB,QAClBJ,EAAc,SAmDN,0BCnIhB,IAAMmC,EAAeC,SAASC,eAAe,QAE7CC,IAASC,OACD,8BACI,cAAC,EAAD,MAEVJ,K","file":"static/js/main.0bcb803b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport \"./CSS/style.css\";\nimport axios from \"axios\"\nimport NumberFormat from \"react-number-format\"\n\n\nexport default function User() {\n\n    //setando os usuários\n    const [usuarios, setUsuarios] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\n        .then(res => {\n            const pessoa = res.data;\n            setUsuarios(pessoa);\n        })\n    },[])\n\n    //lista dos cartões\n    let cards = [\n        // cartão válido\n        {\n          card_number: '1111111111111111',\n          cvv: 789,\n          expiry_date: '01/18',\n        },\n        // cartão inválido\n        {\n          card_number: '4111111111111234',\n          cvv: 123,\n          expiry_date: '01/20',\n        },\n    ];\n\n    //modal\n    const [pagamentoOpen, setPagamentoOpen] = useState('none');\n    const [listTransp, setListTransp] = useState('flex');\n    const [payName, setPayName] = useState('');\n    const [abrirResultado, setAbrirResultado] = useState('none');\n    const [valorDinheiro, setValorDinheiro] = useState('');\n    const [campoNecessario, setCampoNecessario] = useState('none');\n    const [valorCartao, setValorCartao] = useState('1');\n    const [naoConcluido, setNaoConcluido] = useState('');\n    \n\n     // Função para detectar modificação e resgatar valor no selection\n     function handleChange(event){\n        setValorCartao(event.target.value);\n    }\n\n\n    // Abrir o modal de pagameto\n    function modalPagOpen (name) {\n        setPagamentoOpen(\"flex\")\n        setListTransp(\"none\")\n        setPayName(name)\n    }\n\n    // Função para filtrar o valor do dinheiro\n    function inputChange(e){\n        setValorDinheiro(e.target.value);\n        setCampoNecessario(\"none\");\n    }\n\n    //Abrir o modal do recibo de pagamento\n    function modalAbrirResultado () {\n        if (valorDinheiro === '') {\n            setCampoNecessario('flex');\n        } else {\n            if (valorDinheiro === \"1\") {\n                setNaoConcluido(\"\");\n            } else {\n                setNaoConcluido(\"não\");\n            }\n            setPagamentoOpen('none');\n            setAbrirResultado('flex');\n            setValorDinheiro('');\n            setCampoNecessario('none');\n        }\n    }\n\n    //fechar modal\n    function modalFecharResultado () {\n        setAbrirResultado('none');\n        setListTransp('flex');\n    }\n\n    //fechar modal no botão X\n    function modalFecharX () {\n        setPagamentoOpen('none');\n        setListTransp('flex');\n    }\n\n    return (\n        <>\n            {/* lista de usuários */}\n            {usuarios.map((item) =>\n                <div className='usuarios' style={{display:listTransp}}>\n                    <div className='img-usuario'>\n                        <img src={item.img} alt='Imagem usuario'/>\n                    </div>\n                    <div className='identifica-usuario'>\n                        <div>\n                            Nome: {item.name}\n                        </div>\n                        <div>\n                            ID: {item.id} - Username: {item.username}\n                        </div>\n                    </div>\n                    <div className='botaoPagar'>\n                        <button onClick={() => {modalPagOpen(item.name)}}>Pagar</button>\n                    </div>\n                </div>\n            )}\n            {/* modal de pagamento */}\n            <div className='modalAberto' style={{display:pagamentoOpen}}>\n                <div className='headerModal'>\n                    <span>Pagamento para <b>{payName}</b></span>\n                    <span className='fecharX' onClick={modalFecharX}>X</span>\n                </div>\n                <div className='inputValor'>\n                    <NumberFormat thousandSeparator={true} value={valorDinheiro} onChange={inputChange} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\n                    <p style={{display: campoNecessario}}>Campo Obrigatório</p>\n                </div>\n                <select value={valorCartao} onChange={handleChange}>\n                    <option value='1'>Cartão com final {cards[0].card_number.substr(-4)}</option>\n                    <option value='2'>Cartão com final {cards[1].card_number.substr(-4)}</option>\n                </select>\n                <button onClick={() => {modalAbrirResultado ()}}>Pagar</button>\n            </div>\n\n            {/*Modal recibo do pagamento */}\n            <div className='modalAberto' style={{display: abrirResultado}}>\n                <span>Recibo de pagamento</span>\n                <p>O pagamento <strong>{naoConcluido}</strong> foi concluído com sucesso</p>\n                <button onClick={() => {modalFecharResultado()}}>Fechar</button>\n            </div>  \n        </>\n    )\n}\n","  \nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Usuarios from \"./Components/Usuarios\"\n\nconst rootComponet = document.getElementById(\"root\")\n\nReactDOM.render(\n        <div>\n            <Usuarios/>\n        </div>\n, rootComponet)"],"sourceRoot":""}